knitr::opts_chunk$set(echo = TRUE)
a <- read.csv("norm_data_log_hEpCAM_20190213.csv", header = T) #by default, row.names=NULL is included. duplicated header has assigned with each numbers which we dont want.
a
a[,5:ncol(a)]
mat.dat <-data.matrix(a[,3:ncol(a)])
str(mat.dat) #Make sure 40 samples
mat.dat <-data.matrix(a[,3:ncol(a)])
str(mat.dat) #Make sure 120 samples
t.mat.dat <-t(mat.dat) #Transposed matrix #Row names are now unique sample. After converting to data.frame, need to add a new colume with identifier and cateory.
t.mat.dat
#Assigning a new row (category) for subsetting
b <- as.data.frame(t.mat.dat) #Converting back to data.frame.
b
c<- read.csv("gene_id.csv", header = T)
c
d <- cbind(b, c) #Header will be preserved. The bound columnes will be located at the very right.
header(b)
head(b)
#Drawing PCA plot
library(ggfortify)
install,package(ggfortify)
install.packages(ggfortify)
if(!require(devtools)) install.packages("devtools")
devtools::install_github("sinhrks/ggfortify")
#Drawing PCA plot
library(ggfortify)
df <- b[c(1:770)] #Select columns with numeric values for calculation.
df
autoplot(prcomp(df), data=d, colour='category', label=TRUE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=b, colour='category', label=TRUE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=b, colour='category', label=TRUE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
df2 <- iris[c(1, 2, 3, 4)]
df2
autoplot(prcomp(df))
df <- b[c(2:771)] #Select columns with numeric values for calculation.
df <- b[c(2:770)] #Select columns with numeric values for calculation.
autoplot(prcomp(df), data=b, colour='category', label=TRUE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
iris
a <- read.csv("norm_data_log_hEpCAM_20190213.csv", header = T) #by default, row.names=NULL is included. duplicated header has assigned with each numbers which we dont want.
mat.dat <-data.matrix(a[,3:ncol(a)])
str(mat.dat) #Make sure 120 samples
t.mat.dat <-t(mat.dat) #Transposed matrix #Row names are now unique sample. After converting to data.frame, need to add a new colume with identifier and cateory.
#Assigning a new row (category) for subsetting
b <- as.data.frame(t.mat.dat) #Converting back to data.frame.
head(b)
c<- read.csv("tissue_cluster.csv", header = T)
c
d <- cbind(b, c) #Header will be preserved. The bound columnes will be located at the very right.
header(d)
head(d)
d
c<- read.csv("cluster.csv", header = T)
d <- cbind(b, c) #Header will be preserved. The bound columnes will be located at the very right.
#Sanity test
d[,770:773] #Combined coloums
d[,770:773] #Combined coloums
d[,1:3] #Data is ready!
d[,1:3] #Data is ready!
d[,770:773] #Combined coloums
df <- d[c(1:770)] #Select columns with numeric values for calculation.
autoplot(prcomp(df))
autoplot(prcomp(df))
#Three categories: All, Tissue, Day
autoplot(prcomp(df), data=d, colour='All', label=TRUE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=d, colour='All', label=TRUE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
#Three categories: All, Tissue, Day
autoplot(prcomp(df), data=d, colour='All', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=d, colour='All', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=d, colour='Tissue', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=d, colour='Tissue', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=d, colour='Day', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
autoplot(prcomp(df), data=d, colour='Day', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
#hClustering analysis from the transposed matrix
clusters <- hclust(dist(df), method="complete")
#Default it complete-linkage. This calculates the maximum distance between clusters before merging.
plot(clusters)
plot(clusters)
#Advanced vidualisation
library(dendextend)
dend <- as.dendrogram(clusters)
install.packages('dendextend')
#Advanced vidualisation
library(dendextend)
dend <- as.dendrogram(clusters)
dend <- color_branches(dend, k=4) #Visualize data assuming there are 4 clusters.
dend
dend <- color_branches(dend, k=4) #Visualize data assuming there are 4 clusters.
plot(dend,
main= "dendtogram",
horiz = TRUE)
plot(dend,
main= "dendtogram",
horiz = TRUE)\
plot(dend,
main= "dendtogram",
horiz = TRUE)
#Change Labeling based on added column. combine phenotype and GSM.
labels(dend) <- paste(as.character(d[,771])[order.dendrogram(dend)],"(",labels(dend),")", sep = "")
dend <- hang.dendrogram(dend,hang_height=0.1) # Hang the dendrogrm
plot(dend,
main= "dendtogram",
horiz = TRUE)
clusters.cen <- hclust(dist(df), method='centroid') #Centroid-linkage
plot(clusters.cen)
dend.cen <- as.dendrogram(clusters.cen)
dend.cen <- color_branches(dend.cen, k=4) #Visualize data assuming there are 4 clusters.
#Change Labeling based on added column. combine phenotype and GSM.
labels(dend.cen) <- paste(as.character(d[,771])[order.dendrogram(dend.cen)],"(",labels(dend.cen),")", sep = "")
dend.cen <- hang.dendrogram(dend.cen,hang_height=0.1) # Hang the dendrogrm
plot(dend.cen,
main= "GSE59294-Dend-Centeroid-linkage",
horiz = TRUE)
plot(dend.cen,
main= "Centeroid-linkage",
horiz = TRUE)
clusters.sin <- hclust(dist(df), method='single') #Single-linkage
plot(clusters.sin)
dend.sin <- as.dendrogram(clusters.sin)
dend.sin <- color_branches(dend.sin, k=4) #Visualize data assuming there are 4 clusters.
#Change Labeling based on added column. combine phenotype and GSM.
labels(dend.sin) <- paste(as.character(d[,771])[order.dendrogram(dend.sin)],"(",labels(dend.sin),")", sep = "")
dend.sin <- hang.dendrogram(dend.sin,hang_height=0.1) # Hang the dendrogrm
plot(dend.sin,
main= "Single linkage",
horiz = TRUE)
plot(dend.sin,
main= "Single linkage",
horiz = TRUE)
#Coloring by Tissue
autoplot(prcomp(df), data=d, colour='Tissue', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
#Coloring by Tissue
autoplot(prcomp(df), data=d, colour='Tissue', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info un
#Coloring by treatment days
autoplot(prcomp(df), data=d, colour='Day', label=FALSE) + theme (panel.background = element_rect(fill='white', colour='black'))#Subsetting is based on the column info under 'cetegory and labeling is based on rownames.
plot(dend.cen,
main= "Centeroid-linkage",
horiz = TRUE)
dend.cen <- hang.dendrogram(dend.cen,hang_height=0.1) # Hang the dendrogrm
#Change Labeling based on added column. combine phenotype and GSM.
labels(dend.cen) <- paste(as.character(d[,771])[order.dendrogram(dend.cen)],"(",labels(dend.cen),")", sep = "")
clusters.cen <- hclust(dist(df), method='centroid') #Centroid-linkage
plot(clusters.cen)
dend.cen <- as.dendrogram(clusters.cen)
dend.cen <- color_branches(dend.cen, k=4) #Visualize data assuming there are 4 clusters.
#Change Labeling based on added column. combine phenotype and GSM.
labels(dend.cen) <- paste(as.character(d[,771])[order.dendrogram(dend.cen)],"(",labels(dend.cen),")", sep = "")
dend.cen <- hang.dendrogram(dend.cen,hang_height=0.1) # Hang the dendrogrm
plot(dend.cen,
main= "Centeroid-linkage",
horiz = TRUE)
plot(dend.cen,
main= "Centeroid-linkage",
horiz = TRUE)
clusters.sin <- hclust(dist(df), method='single') #Single-linkage
plot(clusters.sin)
dend.sin <- as.dendrogram(clusters.sin)
dend.sin <- color_branches(dend.sin, k=4) #Visualize data assuming there are 4 clusters.
#Change Labeling based on added column. combine phenotype and GSM.
labels(dend.sin) <- paste(as.character(d[,771])[order.dendrogram(dend.sin)],"(",labels(dend.sin),")", sep = "")
dend.sin <- hang.dendrogram(dend.sin,hang_height=0.1) # Hang the dendrogrm
plot(dend.sin,
main= "Single linkage",
horiz = TRUE)
plot(dend.sin,
main= "Single linkage",
horiz = TRUE)
